option optimize_for = LITE_RUNTIME;
option java_package = "net.bluehole.authd.protobuf";
package proto_oparb;

message opmsg {
// ArbGW -> Arb : SendMessageReq.user_srl = 0xfe00000000000000 | server_id(source)
// Arb -> ArbGW : SendMessageReq.user_srl = 0xfe00000000000000 | server_id(dest)
// CardMaker dead : SendMessageAns.result = 0x0e000001
// CardDealer dead : SendMessageAns.result = 0x0f000001
// Arbiter dead : SteerMsg.result_code = 0x00000001

    enum JobType {
        REQUEST = 1;
        RESPONSE = 2;
    }
    
    enum ExecType {
        EXECUTE = 1;
        CAST = 2;
    }
    
    optional fixed32 sender_gusid = 1;
    optional fixed32 receiver_gusid = 2;
    optional JobType job_type = 3;
    optional fixed64 job_id = 4;
    optional fixed32 gufid = 5;
    optional ExecType exec_type = 6;
    optional fixed32 cast_target_user_group_sn = 7; // Only for cast
    optional bytes session_key = 8; // 128bit hex string
 
    // arguments for execution
    message Argument {
      optional bytes name = 1;
      required bytes value = 2;
    }
    repeated Argument arguments = 9;
    
    // return code
    optional fixed32 result_code = 10;
    
    // result scalar
    // using a single result value
    optional bytes result_scalar = 11;
    
    // result set
    // using a table form result, support multi result set
    message ResultSet {
       repeated bytes column_names = 1;
       
       message Row {
           repeated bytes values = 1;
       }
       repeated Row rows = 2;
       optional fixed32 total_count = 3;
    }
    repeated ResultSet result_sets = 12;
    
    // for blob data
    optional bytes blob = 13;
}

message KickUserReq {
    required fixed64 user_srl= 1;
    required fixed32 kick_code= 2;
}

message KickUserAns {
    enum result_type {
        SUCCESS= 0;
        FAILED= 1;
        NOT_EXIST= 2;
    }
    required result_type result= 1;
}

message SendMessageReq {
    required fixed64 user_srl= 1;
    required bytes message= 2;
}

message SendMessageAns {
    enum result_type {
        SUCCESS= 0;
        FAILED= 1;
        NOT_EXIST= 2;
    }
    required result_type result= 1;
}

message BulkKickReq {
    required fixed32 kick_code= 1;
    required fixed32 filter= 2;
    required fixed32 filter_mask= 3;
}
message BulkKickAns {
    required fixed32 user_cnt= 1;
}

message DeniedChatUserReq {
  required fixed64 user_srl = 1;
  required fixed32 end_datetime = 2;
}

message DeniedChatUserAns {
    enum result_type {
        SUCCESS= 0;
        FAILED= 1;
        NOT_EXIST= 2;
    }
    required result_type result= 1;
}

message AddRemainingMinReq {
  required fixed64 user_srl = 1;
  required fixed32 remaining_min = 2;
}

message AddRemainingMinAns {
    enum result_type {
        SUCCESS= 0;
        FAILED= 1;
        NOT_EXIST= 2;
    }
    required result_type result= 1;
}

message PingReq {
}
message PingAns {
    required fixed32 time= 1;
    required fixed32 value1= 2;
    required fixed32 value2= 3;
    repeated fixed32 opt_values= 4;
}

message UpdateServerStatNoti {
}

message BoxNotiUserReq {
    required fixed64 user_srl= 1;
    required fixed32 char_srl= 2;
}
message BoxNotiUserAns {
    enum result_type {
        SUCCESS= 0;
        FAILED= 1;
        NOT_EXIST= 2;
    }
    required result_type result= 1;
}

message SvrMsgReq {
    required bytes contents= 2;
}
message SvrMsgAns {
    required bool result= 1;
}


// CharTransQueryAns, CharTransExecAns의 code목록
// 1       아래쪽에서 정의되지 않은 뭔지 알수없는 에라
// 2       이전하려는 캐릭터가 없을 때
// 4       나가려는 서버에서 나갈수 있다고 세팅이 되어있지 않을 때 
// 8       레벨이 나갈수 있다고 세팅된 것 보다 낮아서
// 16      돈이 세팅된 것 보다 너무 많아서
// 32      자판기를 열어 놓아서 나갈수없다
// 64      경매장에 정산 목록이 남아있어서
// 128     소포에 아직 찾지 않은 물품이 있어서
// 256     이전 불가능 하다고 세팅된 아이템이 인벤에 있어서
// 512     캐릭이전 해갈 서버에서 캐릭터를 만들지 못했을 때
// 1024    캐릭이전 해갈 서버가 들어오라고 세팅되지 않아서
// 2048    캐릭이전 해갈 서버의 계정에 이미 캐릭이 초과되었다
// 4096    캐릭터가 캐릭터 제재 먹혀있으면 나갈수없다
// 8192    캐릭터가 길드에 가입되어있으면 안된다
// 16384   캐릭터가 압류된 아이템이 있으면 안된다
// 32768   캐릭터가 바로 로그인 사용가능 상태가 아니고 캐릭터 이름을 바꿔야 사용가능한 상태
//         캐릭터 이전했는데 이름이 겹쳐져서 임시 이름으로 바뀌어져 있는 상황
// 65536   캐릭터가 삭제 대기중일 때

message CharTransQueryReq {
    required fixed32 char_srl= 1;
}
message CharTransQueryAns {
    required fixed64 money= 1;
    required fixed32 level= 2;
    required fixed32 code= 3;
}

message CharTransExecReq {
    required fixed32 char_srl= 1;
    required fixed32 dest_arb= 2;
    required fixed64 money_max= 3;
    required fixed32 level_min= 4;
}
message CharTransExecAns {
    required fixed32 new_char_srl= 1;
    required fixed32 code= 2;
}

message SendRefreshBillNoti {
    required fixed64 user_srl= 1;
}

message SendCommandNoti {
    required fixed64 user_srl= 1;
    required fixed32 command= 2;
    required fixed32 value= 3;
    optional fixed32 value2= 4;
}

message CharNameBanReq {
	required fixed32 char_srl= 1;
	required fixed32 code= 2;
}

message CharNameBanAns {
    enum result_type {
        SUCCESS= 0;
        FAILED= 1;
        NOT_EXIST= 2;
    }
    required result_type result= 1;
}

message GuildNameBanReq {
	required fixed32 guild_srl= 1;
}

message GuildNameBanAns {
    enum result_type {
        SUCCESS= 0;
        FAILED= 1;
        NOT_EXIST= 2;
    }
    required result_type result= 1;
}
